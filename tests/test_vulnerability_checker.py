import unittest
from app.vulnerability_checker import check_vulnerabilities, calculate_cvss
import os

class TestVulnerabilityChecker(unittest.TestCase):
    def test_check_vulnerabilities(self):
        # 테스트 파일 생성
        with open('test_file.c', 'w') as f:
            f.write('#include <stdio.h>\n')
            f.write('int main() {\n')
            f.write('    char buffer[10];\n')
            f.write('    gets(buffer);\n')  # Vulnerable line
            f.write('    printf(buffer);\n')  # Vulnerable line
            f.write('    return 0;\n')
            f.write('}\n')
        
        # 취약성 검사
        vulnerabilities = check_vulnerabilities('test_file.c')
        self.assertEqual(len(vulnerabilities), 2)
        self.assertEqual(vulnerabilities[0]['type'], 'Buffer Overflow')
        self.assertEqual(vulnerabilities[1]['type'], 'Format String Vulnerability')
        
        # 테스트 파일 삭제
        os.remove('test_file.c')

    def test_calculate_cvss(self):
        vulnerability = {
            'type': 'Buffer Overflow',
            'description': 'Usage of gets() detected',
            'line': 4
        }
        score = calculate_cvss(vulnerability)
        self.assertTrue(0 <= score <= 10)

if __name__ == '__main__':
    unittest.main()
